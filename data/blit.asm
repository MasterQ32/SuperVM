; ============================================================================
; Code generated by EinCompiler.
; Generator: SVMABackEnd
; Date:      07/11/2016 00:44:24.
; ============================================================================


; Functions:
blit24:
	bpget
	spget
	bpset
	push 0 ; allocate local x
	push 0 ; allocate local y
	push 0 ; allocate local c
	; y := int32(0)
	push 0 
	set 2  [r:push] ; local y
	drop

	; while(y [Differs] h) { ... }
	; begin while
__internal__label0:
	get -6  ; argument h
	get 2  ; local y
	sub [f:yes] [r:discard]
	[ex(z)=0] push 1
	[ex(z)=1] push 0
	[i0:peek] nop [f:yes]
	drop [f:no]
	[ex(z)=1] jmp @__internal__label1
	; x := int32(0)
	push 0 
	set 1  [r:push] ; local x
	drop

	; while(x [Differs] w) { ... }
	; begin while
__internal__label2:
	get -5  ; argument w
	get 1  ; local x
	sub [f:yes] [r:discard]
	[ex(z)=0] push 1
	[ex(z)=1] push 0
	[i0:peek] nop [f:yes]
	drop [f:no]
	[ex(z)=1] jmp @__internal__label3
	; c := int32(0)
	push 0 
	set 3  [r:push] ; local c
	drop

	; c := int32(65536) [Multiplication] read8(source [Addition] conv(int32(3) [Multiplication] y [Multiplication] w [Addition] x [Addition] int32(0)))
	push 0 
	get 1  ; local x
	get -5  ; argument w
	get 2  ; local y
	mul 
	add 
	push 3 
	mul 
	add 


	get -2  ; argument source
	add 

	load8i
	push 65536 
	mul 
	set 3  [r:push] ; local c
	drop

	; c := c [Addition] int32(256) [Multiplication] read8(source [Addition] conv(int32(3) [Multiplication] y [Multiplication] w [Addition] x [Addition] int32(1)))
	push 1 
	get 1  ; local x
	get -5  ; argument w
	get 2  ; local y
	mul 
	add 
	push 3 
	mul 
	add 


	get -2  ; argument source
	add 

	load8i
	push 256 
	mul 
	get 3  ; local c
	add 
	set 3  [r:push] ; local c
	drop

	; c := c [Addition] read8(source [Addition] conv(int32(3) [Multiplication] y [Multiplication] w [Addition] x [Addition] int32(2)))
	push 2 
	get 1  ; local x
	get -5  ; argument w
	get 2  ; local y
	mul 
	add 
	push 3 
	mul 
	add 


	get -2  ; argument source
	add 

	load8i
	get 3  ; local c
	add 
	set 3  [r:push] ; local c
	drop

	; write(getVideoBase() [Addition] conv(int32(4) [Multiplication] y [Addition] _y [Multiplication] width() [Addition] x [Addition] _x), c)
	get 3  ; local c
	get -3  ; argument _x
	get 1  ; local x
	add 

	in 0x40001
	get -4  ; argument _y
	get 2  ; local y
	add 
	mul 
	add 
	push 4 
	mul 



	in 0x40004
	add 

	store32i
	push 0
	drop

	; x := x [Addition] int32(1)
	push 1 
	get 1  ; local x
	add 
	set 1  [r:push] ; local x
	drop

	jmp @__internal__label2 ; end while
__internal__label3:

	; y := y [Addition] int32(1)
	push 1 
	get 2  ; local y
	add 
	set 2  [r:push] ; local y
	drop

	jmp @__internal__label0 ; end while
__internal__label1:

	bpget
	spset
	bpset
	ret

main:
	bpget
	spget
	bpset
	; blit24(getImage(), int32(32), int32(32), int32(160), int32(120))
	push 120 
	push 160 
	push 32 
	push 32 

	push $isometric
	cpget
	jmp @blit24
	drop ; source
	drop ; _x
	drop ; _y
	drop ; w
	drop ; h
	push 0
	drop

	; fastBlit24(getImage(), int32(200), int32(32), int32(160), int32(120))
	push 120 
	push 160 
	push 32 
	push 200 

	push $isometric

	cpget 
	jmp @fast_blit24
	push 0
	drop

	; while(int32(1)) { ... }
	; begin while
__internal__label4:
	push 1  [f:yes] 
	drop [f:no]
	[ex(z)=1] jmp @__internal__label5
	jmp @__internal__label4 ; end while
__internal__label5:

	bpget
	spset
	bpset
	ret

