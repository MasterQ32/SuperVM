


inline fn width() -> int
[[
	in 0x40001
]]

inline fn height() -> int
[[
	in 0x40002
]]


inline fn exit(i : int)
[[
	syscall [i0:pop] [ci:0]
]]

inline fn putc(i : int)
[[
	syscall [i0:pop] [ci:1]
]]

inline fn puti(i : int)
[[
	syscall [i0:pop] [ci:2]
]]

inline fn getVideoBase() -> ptr
[[
	in 0x40004
]]

inline fn conv(i : int) -> ptr
[[

]]

inline fn write(addr : ptr, v : int)
[[
	store32i
]]

inline fn read(addr : ptr) -> int
[[
	load32i
]]
inline fn read8(addr : ptr) -> int
[[
	load8i
]]

fn blit24(source : ptr, _x : int, _y : int, w : int, h : int)
	var x : int;
	var y : int;
	var c : int;
{
	y := 0;
	while(y != h) {
		x := 0;
		
		while(x != w) {
			c := 0;
			c := 65536 * read8(source + conv(3 * (y*w + x) + 0));
			c := c + 256 * read8(source + conv(3 * (y*w + x) + 1));
			c := c + read8(source + conv(3 * (y*w + x) + 2));

			write(getVideoBase() + conv(4 * ((y + _y) * width() + x + _x)), c);
			
			x := x + 1;
		}
		// puti(y);
		// putc('\n');
		y := y + 1;
	}
}

fn main()
{
			blit24(getImage(),  32, 32, 160, 120);
	fastBlit24(getImage(), 200, 32, 160, 120);
	while(1) { }
}

inline fn getImage() -> ptr
[[
	push $isometric
]]

inline fn fastBlit24(source : ptr, _x : int, _y : int, w : int, h : int)
[[
	cpget 
	jmp @fast_blit24
]]